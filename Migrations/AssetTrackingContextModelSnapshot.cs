// <auto-generated />
using System;
using Level3;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetTrackingDB.Migrations
{
    [DbContext(typeof(AssetTrackingContext))]
    partial class AssetTrackingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Level3_0.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Asset");

                    b.HasDiscriminator().HasValue("Asset");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Level3_0.AssetUser", b =>
                {
                    b.Property<int>("AssetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssetId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("AssetUsers");

                    b.HasData(
                        new
                        {
                            AssetId = 1,
                            UserId = 1
                        },
                        new
                        {
                            AssetId = 2,
                            UserId = 1
                        },
                        new
                        {
                            AssetId = 3,
                            UserId = 2
                        },
                        new
                        {
                            AssetId = 4,
                            UserId = 2
                        },
                        new
                        {
                            AssetId = 5,
                            UserId = 3
                        },
                        new
                        {
                            AssetId = 6,
                            UserId = 3
                        },
                        new
                        {
                            AssetId = 1,
                            UserId = 4
                        },
                        new
                        {
                            AssetId = 2,
                            UserId = 5
                        },
                        new
                        {
                            AssetId = 3,
                            UserId = 4
                        },
                        new
                        {
                            AssetId = 4,
                            UserId = 5
                        },
                        new
                        {
                            AssetId = 5,
                            UserId = 1
                        },
                        new
                        {
                            AssetId = 6,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Level3_0.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = 0,
                            Name = "San Francisco HQ"
                        },
                        new
                        {
                            Id = 2,
                            Country = 1,
                            Name = "Berlin Office"
                        },
                        new
                        {
                            Id = 3,
                            Country = 2,
                            Name = "Stockholm Office"
                        });
                });

            modelBuilder.Entity("Level3_0.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Robert"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Carl"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Diana"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Eric"
                        });
                });

            modelBuilder.Entity("Level3_0.AsusLaptop", b =>
                {
                    b.HasBaseType("Level3_0.Asset");

                    b.Property<int>("MemoryGB")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcessorType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("AsusLaptop");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Manufacturer = "Asus",
                            Model = "Zephyrus G14",
                            OfficeId = 3,
                            Price = 1799.99m,
                            PurchaseDate = new DateTime(2023, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemoryGB = 32,
                            ProcessorType = "AMD Ryzen 9"
                        },
                        new
                        {
                            Id = 4,
                            Manufacturer = "Asus",
                            Model = "ZenBook 14",
                            OfficeId = 1,
                            Price = 1099.99m,
                            PurchaseDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemoryGB = 16,
                            ProcessorType = "Intel Core i7"
                        });
                });

            modelBuilder.Entity("Level3_0.Iphone", b =>
                {
                    b.HasBaseType("Level3_0.Asset");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StorageCapacity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Iphone");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            Manufacturer = "Apple",
                            Model = "iPhone 13 Pro",
                            OfficeId = 1,
                            Price = 1099.99m,
                            PurchaseDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Color = "Graphite",
                            StorageCapacity = "256GB"
                        },
                        new
                        {
                            Id = 8,
                            Manufacturer = "Apple",
                            Model = "iPhone 12",
                            OfficeId = 3,
                            Price = 799.99m,
                            PurchaseDate = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Color = "Blue",
                            StorageCapacity = "128GB"
                        });
                });

            modelBuilder.Entity("Level3_0.LenovoLaptop", b =>
                {
                    b.HasBaseType("Level3_0.Asset");

                    b.Property<int>("MemoryGB")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcessorType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Asset", t =>
                        {
                            t.Property("MemoryGB")
                                .HasColumnName("LenovoLaptop_MemoryGB");

                            t.Property("ProcessorType")
                                .HasColumnName("LenovoLaptop_ProcessorType");
                        });

                    b.HasDiscriminator().HasValue("LenovoLaptop");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Manufacturer = "Lenovo",
                            Model = "ThinkPad X1",
                            OfficeId = 2,
                            Price = 1899.99m,
                            PurchaseDate = new DateTime(2022, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemoryGB = 16,
                            ProcessorType = "Intel Core i7"
                        },
                        new
                        {
                            Id = 6,
                            Manufacturer = "Lenovo",
                            Model = "Yoga 9i",
                            OfficeId = 3,
                            Price = 1499.99m,
                            PurchaseDate = new DateTime(2022, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemoryGB = 12,
                            ProcessorType = "Intel Core i5"
                        });
                });

            modelBuilder.Entity("Level3_0.MacBook", b =>
                {
                    b.HasBaseType("Level3_0.Asset");

                    b.Property<int>("MemoryGB")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcessorType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Asset", t =>
                        {
                            t.Property("MemoryGB")
                                .HasColumnName("MacBook_MemoryGB");

                            t.Property("ProcessorType")
                                .HasColumnName("MacBook_ProcessorType");
                        });

                    b.HasDiscriminator().HasValue("MacBook");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manufacturer = "Apple",
                            Model = "MacBook Pro 16\"",
                            OfficeId = 1,
                            Price = 2499.99m,
                            PurchaseDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemoryGB = 16,
                            ProcessorType = "M1 Pro"
                        },
                        new
                        {
                            Id = 2,
                            Manufacturer = "Apple",
                            Model = "MacBook Air",
                            OfficeId = 2,
                            Price = 1299.99m,
                            PurchaseDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemoryGB = 8,
                            ProcessorType = "M1"
                        });
                });

            modelBuilder.Entity("Level3_0.NokiaPhone", b =>
                {
                    b.HasBaseType("Level3_0.Asset");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StorageCapacity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Asset", t =>
                        {
                            t.Property("Color")
                                .HasColumnName("NokiaPhone_Color");

                            t.Property("StorageCapacity")
                                .HasColumnName("NokiaPhone_StorageCapacity");
                        });

                    b.HasDiscriminator().HasValue("NokiaPhone");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Manufacturer = "Nokia",
                            Model = "8.3 5G",
                            OfficeId = 1,
                            Price = 599.99m,
                            PurchaseDate = new DateTime(2022, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Color = "Polar Night",
                            StorageCapacity = "128GB"
                        },
                        new
                        {
                            Id = 12,
                            Manufacturer = "Nokia",
                            Model = "G20",
                            OfficeId = 2,
                            Price = 249.99m,
                            PurchaseDate = new DateTime(2022, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Color = "Night",
                            StorageCapacity = "64GB"
                        });
                });

            modelBuilder.Entity("Level3_0.SamsungPhone", b =>
                {
                    b.HasBaseType("Level3_0.Asset");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StorageCapacity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Asset", t =>
                        {
                            t.Property("Color")
                                .HasColumnName("SamsungPhone_Color");

                            t.Property("StorageCapacity")
                                .HasColumnName("SamsungPhone_StorageCapacity");
                        });

                    b.HasDiscriminator().HasValue("SamsungPhone");

                    b.HasData(
                        new
                        {
                            Id = 9,
                            Manufacturer = "Samsung",
                            Model = "Galaxy S21",
                            OfficeId = 2,
                            Price = 1199.99m,
                            PurchaseDate = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Color = "Phantom Black",
                            StorageCapacity = "512GB"
                        },
                        new
                        {
                            Id = 10,
                            Manufacturer = "Samsung",
                            Model = "Galaxy A52",
                            OfficeId = 3,
                            Price = 499.99m,
                            PurchaseDate = new DateTime(2022, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Color = "Awesome Blue",
                            StorageCapacity = "128GB"
                        });
                });

            modelBuilder.Entity("Level3_0.Asset", b =>
                {
                    b.HasOne("Level3_0.Office", "Office")
                        .WithMany("Assets")
                        .HasForeignKey("OfficeId");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Level3_0.AssetUser", b =>
                {
                    b.HasOne("Level3_0.Asset", "Asset")
                        .WithMany("AssetUsers")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Level3_0.User", "User")
                        .WithMany("AssetUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Level3_0.Asset", b =>
                {
                    b.Navigation("AssetUsers");
                });

            modelBuilder.Entity("Level3_0.Office", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("Level3_0.User", b =>
                {
                    b.Navigation("AssetUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
